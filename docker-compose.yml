version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${NAME}
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}
    container_name: postgres_db
    restart: always
    ports:
      - "5433:5432"
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER} -d ${NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server:/app
      - ./server/static:/app/static
      - ./server/media:/app/media
    ports:
      - "8000:8000"
    container_name: django_container
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${NAME}
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - PORT=${PORT}
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - CACHES_LOCATION=${CACHES_LOCATION}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DJANGO_DEBUG=True
    networks:
      - ecommerce_network 
    restart: always
    stdin_open: true
    tty: true

  celery_worker:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: celery -A server worker --loglevel=info
    volumes:
      - ./server:/app
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - ecommerce_network

  # frontend:
  #   build:
  #     context: ./user_interface
  #     dockerfile: Dockerfile
  #   container_name: frontend_container
  #   volumes:
  #     - ./user_interface:/app
  #     - /app/node_modules  # Prevent overwriting node_modules
  #   ports:
  #     - "5173:5173"
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #     - WATCHPACK_POLLING=true
  #     - FAST_REFRESH=true
  #     - VITE_API_URL=http://localhost:8000
  #   depends_on:
  #     - backend
  #   networks:
  #     - ecommerce_network 
  #   stdin_open: true
  #   tty: true

volumes:
  postgres_data:
  redis_data:

networks:
  ecommerce_network:
    driver: bridge